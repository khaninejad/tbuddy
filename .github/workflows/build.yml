name: Build and Package Bot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Updated to the latest version

    - name: Set up Python
      uses: actions/setup-python@v4  # Updated to the latest version
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Ensure you have this file

    - name: Build installer
      run: |
        pip install pyinstaller
        pyinstaller --onefile gui.py  # Adjust if your entry point is different
        
        # Move the installer to a temp directory
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/gui /tmp/gui-installer  # For Linux
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/gui.exe /tmp/gui-installer.exe  # For Windows
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/gui /tmp/gui-installer  # For macOS
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bot-installer-${{ matrix.os }}
        path: |
          ${{ matrix.os == 'ubuntu-latest' && '/tmp/gui-installer' || '' }}
          ${{ matrix.os == 'windows-latest' && '/tmp/gui-installer.exe' || '' }}
          ${{ matrix.os == 'macos-latest' && '/tmp/gui-installer' || '' }}
